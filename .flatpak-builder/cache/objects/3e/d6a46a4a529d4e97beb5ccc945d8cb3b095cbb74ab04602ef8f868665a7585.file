/****************************************************************************
** Meta object code from reading C++ file 'mpvpreview.h'
**
** Created by: The Qt Meta Object Compiler version 68 (Qt 6.8.0)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include "../../mpv/mpvpreview.h"
#include <QtCore/qmetatype.h>

#include <QtCore/qtmochelpers.h>

#include <memory>


#include <QtCore/qxptype_traits.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'mpvpreview.h' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 68
#error "This file was generated using the moc from 6.8.0. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

#ifndef Q_CONSTINIT
#define Q_CONSTINIT
#endif

QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
QT_WARNING_DISABLE_GCC("-Wuseless-cast")
namespace {

#ifdef QT_MOC_HAS_STRINGDATA
struct qt_meta_stringdata_CLASSMpvPreviewENDCLASS_t {};
constexpr auto qt_meta_stringdata_CLASSMpvPreviewENDCLASS = QtMocHelpers::stringData(
    "MpvPreview",
    "QML.Element",
    "auto",
    "positionChanged",
    "",
    "aspectRatioChanged",
    "fileChanged",
    "accuratePreviewChanged",
    "isLocalFileChanged",
    "isVideoChanged",
    "loadFile",
    "position",
    "aspectRatio",
    "file",
    "accuratePreview",
    "isLocalFile",
    "isVideo"
);
#else  // !QT_MOC_HAS_STRINGDATA
#error "qtmochelpers.h not found or too old."
#endif // !QT_MOC_HAS_STRINGDATA
} // unnamed namespace

Q_CONSTINIT static const uint qt_meta_data_CLASSMpvPreviewENDCLASS[] = {

 // content:
      12,       // revision
       0,       // classname
       1,   14, // classinfo
       7,   16, // methods
       6,   65, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       6,       // signalCount

 // classinfo: key, value
       1,    2,

 // signals: name, argc, parameters, tag, flags, initial metatype offsets
       3,    0,   58,    4, 0x06,    7 /* Public */,
       5,    0,   59,    4, 0x06,    8 /* Public */,
       6,    0,   60,    4, 0x06,    9 /* Public */,
       7,    0,   61,    4, 0x06,   10 /* Public */,
       8,    0,   62,    4, 0x06,   11 /* Public */,
       9,    0,   63,    4, 0x06,   12 /* Public */,

 // methods: name, argc, parameters, tag, flags, initial metatype offsets
      10,    0,   64,    4, 0x02,   13 /* Public */,

 // signals: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,

 // methods: parameters
    QMetaType::Void,

 // properties: name, type, flags, notifyId, revision
      11, QMetaType::Double, 0x00015103, uint(0), 0,
      12, QMetaType::Double, 0x00015001, uint(1), 0,
      13, QMetaType::QString, 0x00015103, uint(2), 0,
      14, QMetaType::Bool, 0x00015103, uint(3), 0,
      15, QMetaType::Bool, 0x00015103, uint(4), 0,
      16, QMetaType::Bool, 0x00015103, uint(5), 0,

       0        // eod
};

Q_CONSTINIT const QMetaObject MpvPreview::staticMetaObject = { {
    QMetaObject::SuperData::link<MpvAbstractItem::staticMetaObject>(),
    qt_meta_stringdata_CLASSMpvPreviewENDCLASS.offsetsAndSizes,
    qt_meta_data_CLASSMpvPreviewENDCLASS,
    qt_static_metacall,
    nullptr,
    qt_metaTypeArray<
        // property 'position'
        double,
        // property 'aspectRatio'
        double,
        // property 'file'
        QString,
        // property 'accuratePreview'
        bool,
        // property 'isLocalFile'
        bool,
        // property 'isVideo'
        bool,
        // Q_OBJECT / Q_GADGET
        MpvPreview,
        // method 'positionChanged'
        void,
        // method 'aspectRatioChanged'
        void,
        // method 'fileChanged'
        void,
        // method 'accuratePreviewChanged'
        void,
        // method 'isLocalFileChanged'
        void,
        // method 'isVideoChanged'
        void,
        // method 'loadFile'
        void
    >,
    nullptr
} };

void MpvPreview::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        auto *_t = static_cast<MpvPreview *>(_o);
        (void)_t;
        switch (_id) {
        case 0: _t->positionChanged(); break;
        case 1: _t->aspectRatioChanged(); break;
        case 2: _t->fileChanged(); break;
        case 3: _t->accuratePreviewChanged(); break;
        case 4: _t->isLocalFileChanged(); break;
        case 5: _t->isVideoChanged(); break;
        case 6: _t->loadFile(); break;
        default: ;
        }
    } else if (_c == QMetaObject::IndexOfMethod) {
        int *result = reinterpret_cast<int *>(_a[0]);
        {
            using _t = void (MpvPreview::*)();
            if (_t _q_method = &MpvPreview::positionChanged; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 0;
                return;
            }
        }
        {
            using _t = void (MpvPreview::*)();
            if (_t _q_method = &MpvPreview::aspectRatioChanged; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 1;
                return;
            }
        }
        {
            using _t = void (MpvPreview::*)();
            if (_t _q_method = &MpvPreview::fileChanged; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 2;
                return;
            }
        }
        {
            using _t = void (MpvPreview::*)();
            if (_t _q_method = &MpvPreview::accuratePreviewChanged; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 3;
                return;
            }
        }
        {
            using _t = void (MpvPreview::*)();
            if (_t _q_method = &MpvPreview::isLocalFileChanged; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 4;
                return;
            }
        }
        {
            using _t = void (MpvPreview::*)();
            if (_t _q_method = &MpvPreview::isVideoChanged; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 5;
                return;
            }
        }
    } else if (_c == QMetaObject::ReadProperty) {
        auto *_t = static_cast<MpvPreview *>(_o);
        (void)_t;
        void *_v = _a[0];
        switch (_id) {
        case 0: *reinterpret_cast< double*>(_v) = _t->position(); break;
        case 1: *reinterpret_cast< double*>(_v) = _t->aspectRatio(); break;
        case 2: *reinterpret_cast< QString*>(_v) = _t->file(); break;
        case 3: *reinterpret_cast< bool*>(_v) = _t->accuratePreview(); break;
        case 4: *reinterpret_cast< bool*>(_v) = _t->isLocalFile(); break;
        case 5: *reinterpret_cast< bool*>(_v) = _t->isVideo(); break;
        default: break;
        }
    } else if (_c == QMetaObject::WriteProperty) {
        auto *_t = static_cast<MpvPreview *>(_o);
        (void)_t;
        void *_v = _a[0];
        switch (_id) {
        case 0: _t->setPosition(*reinterpret_cast< double*>(_v)); break;
        case 2: _t->setFile(*reinterpret_cast< QString*>(_v)); break;
        case 3: _t->setAccuratePreview(*reinterpret_cast< bool*>(_v)); break;
        case 4: _t->setIsLocalFile(*reinterpret_cast< bool*>(_v)); break;
        case 5: _t->setIsVideo(*reinterpret_cast< bool*>(_v)); break;
        default: break;
        }
    } else if (_c == QMetaObject::ResetProperty) {
    } else if (_c == QMetaObject::BindableProperty) {
    }
    (void)_a;
}

const QMetaObject *MpvPreview::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *MpvPreview::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_CLASSMpvPreviewENDCLASS.stringdata0))
        return static_cast<void*>(this);
    return MpvAbstractItem::qt_metacast(_clname);
}

int MpvPreview::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = MpvAbstractItem::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 7)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 7;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 7)
            *reinterpret_cast<QMetaType *>(_a[0]) = QMetaType();
        _id -= 7;
    }else if (_c == QMetaObject::ReadProperty || _c == QMetaObject::WriteProperty
            || _c == QMetaObject::ResetProperty || _c == QMetaObject::BindableProperty
            || _c == QMetaObject::RegisterPropertyMetaType) {
        qt_static_metacall(this, _c, _id, _a);
        _id -= 6;
    }
    return _id;
}

// SIGNAL 0
void MpvPreview::positionChanged()
{
    QMetaObject::activate(this, &staticMetaObject, 0, nullptr);
}

// SIGNAL 1
void MpvPreview::aspectRatioChanged()
{
    QMetaObject::activate(this, &staticMetaObject, 1, nullptr);
}

// SIGNAL 2
void MpvPreview::fileChanged()
{
    QMetaObject::activate(this, &staticMetaObject, 2, nullptr);
}

// SIGNAL 3
void MpvPreview::accuratePreviewChanged()
{
    QMetaObject::activate(this, &staticMetaObject, 3, nullptr);
}

// SIGNAL 4
void MpvPreview::isLocalFileChanged()
{
    QMetaObject::activate(this, &staticMetaObject, 4, nullptr);
}

// SIGNAL 5
void MpvPreview::isVideoChanged()
{
    QMetaObject::activate(this, &staticMetaObject, 5, nullptr);
}
QT_WARNING_POP
