/* This is a generated file. DO NOT EDIT! */

static const uint16_t recff_idmap[] = {
0,
0x0100,
0x0200,
0x0300,
0x0400,
0x0500+(0),
0x0600,
0x0500+(1),
0x0700,
0x0800,
0x0900,
0,
0x0a00,
0x0b00,
0x0c00,
0,
0x0d00,
0x0e00,
0x0f00,
0,
0x1000,
0x1100,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0x1200,
0x1300,
0x1400,
0x1500+(IRFPM_FLOOR),
0x1500+(IRFPM_CEIL),
0x1600+(IRFPM_SQRT),
0x1700+(IRCALL_log10),
0x1700+(IRCALL_exp),
0x1700+(IRCALL_sin),
0x1700+(IRCALL_cos),
0x1700+(IRCALL_tan),
0x1700+(IRCALL_asin),
0x1700+(IRCALL_acos),
0x1700+(IRCALL_atan),
0x1700+(IRCALL_sinh),
0x1700+(IRCALL_cosh),
0x1700+(IRCALL_tanh),
0,
0,
0x1800,
0x1900,
0x1a00,
0,
0x1b00,
0x1c00+(IR_MIN),
0x1c00+(IR_MAX),
0x1d00,
0,
0x1e00,
0x1f00+(IR_BNOT),
0x1f00+(IR_BSWAP),
0x2000+(IR_BSHL),
0x2000+(IR_BSHR),
0x2000+(IR_BSAR),
0x2000+(IR_BROL),
0x2000+(IR_BROR),
0x2100+(IR_BAND),
0x2100+(IR_BOR),
0x2100+(IR_BXOR),
0x2200,
0x2300+(0),
0x2400,
0x2300+(1),
0x2500,
0x2600+(IRCALL_lj_buf_putstr_reverse),
0x2600+(IRCALL_lj_buf_putstr_lower),
0x2600+(IRCALL_lj_buf_putstr_upper),
0,
0x2700,
0,
0,
0,
0,
0x2800,
0,
0x2900,
0x2a00,
0x2b00,
0x2c00,
0x2d00,
0x2e00,
0,
0x2f00,
0x3000,
0,
0,
0x3100+(0),
0x3200+(0),
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0x3100+(GCROOT_IO_OUTPUT),
0x3200+(GCROOT_IO_OUTPUT),
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0x3300,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0x3400+(0),
0x3400+(1),
0x3500+(MM_eq),
0x3500+(MM_len),
0x3500+(MM_lt),
0x3500+(MM_le),
0x3500+(MM_concat),
0x3600,
0x3500+(MM_add),
0x3500+(MM_sub),
0x3500+(MM_mul),
0x3500+(MM_div),
0x3500+(MM_mod),
0x3500+(MM_pow),
0x3500+(MM_unm),
0,
0,
0,
0x3700+(1),
0x3700+(0),
0,
0,
0,
0,
0x3800,
0x3800,
0x3900,
0,
0x3a00,
0x3b00+(FF_ffi_sizeof),
0x3b00+(FF_ffi_alignof),
0x3b00+(FF_ffi_offsetof),
0x3c00,
0x3d00,
0x3e00,
0x3f00,
0x4000,
0,
0x4100,
0,
0,
0x4200,
0x4300,
0x4400,
0x4500,
0x4600,
0x4700,
0x4800,
0x4900,
0x4a00,
0x4b00,
0x4c00,
0x4d00,
0,
0x4e00,
0x4f00,
0,
0x5000,
0x5100
};

static const RecordFunc recff_func[] = {
recff_nyi,
recff_c,
recff_assert,
recff_type,
recff_next,
recff_xpairs,
recff_ipairs_aux,
recff_getmetatable,
recff_setmetatable,
recff_getfenv,
recff_rawget,
recff_rawset,
recff_rawequal,
recff_select,
recff_tonumber,
recff_tostring,
recff_pcall,
recff_xpcall,
recff_thread_exdata,
recff_thread_exdata2,
recff_math_abs,
recff_math_round,
recff_math_unary,
recff_math_call,
recff_math_log,
recff_math_atan2,
recff_math_pow,
recff_math_ldexp,
recff_math_minmax,
recff_math_random,
recff_bit_tobit,
recff_bit_unary,
recff_bit_shift,
recff_bit_nary,
recff_bit_tohex,
recff_string_range,
recff_string_char,
recff_string_rep,
recff_string_op,
recff_string_find,
recff_string_format,
recff_table_insert,
recff_table_concat,
recff_table_clone,
recff_table_isarray,
recff_table_nkeys,
recff_table_isempty,
recff_table_new,
recff_table_clear,
recff_io_write,
recff_io_flush,
recff_debug_getmetatable,
recff_cdata_index,
recff_cdata_arith,
recff_cdata_call,
recff_clib_index,
recff_ffi_new,
recff_ffi_typeof,
recff_ffi_istype,
recff_ffi_xof,
recff_ffi_errno,
recff_ffi_string,
recff_ffi_copy,
recff_ffi_fill,
recff_ffi_abi,
recff_ffi_gc,
recff_buffer_method_reset,
recff_buffer_method_skip,
recff_buffer_method_set,
recff_buffer_method_put,
recff_buffer_method_putf,
recff_buffer_method_get,
recff_buffer_method_putcdata,
recff_buffer_method_reserve,
recff_buffer_method_commit,
recff_buffer_method_ref,
recff_buffer_method_encode,
recff_buffer_method_decode,
recff_buffer_method___tostring,
recff_buffer_method___len,
recff_buffer_encode,
recff_buffer_decode
};

