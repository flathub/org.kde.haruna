// This file is generated by kconfig_compiler_kf6 from informationsettings.kcfg.
// All changes you do to this file will be lost.
#ifndef INFORMATIONSETTINGS_H
#define INFORMATIONSETTINGS_H

#include <kconfigskeleton.h>
#include <QCoreApplication>
#include <QDebug>

class InformationSettings : public KConfigSkeleton
{
  Q_OBJECT
  public:

    static InformationSettings *self();
    ~InformationSettings() override;

    /**
      Set MpvLogging
    */
    static
    void setMpvLogging( bool v )
    {
      if (v != self()->mMpvLogging && !self()->isMpvLoggingImmutable()) {
        self()->mMpvLogging = v;
        Q_EMIT self()->MpvLoggingChanged();
      }
    }

    Q_PROPERTY(bool mpvLogging READ mpvLogging WRITE setMpvLogging NOTIFY MpvLoggingChanged)
    Q_PROPERTY(bool isMpvLoggingImmutable READ isMpvLoggingImmutable CONSTANT)
    /**
      Get MpvLogging
    */
    static
    bool mpvLogging()
    {
      return self()->mMpvLogging;
    }

    /**
      Is MpvLogging Immutable
    */
    static
    bool isMpvLoggingImmutable()
    {
      return self()->isImmutable( QStringLiteral( "MpvLogging" ) );
    }

    /**
      Get MpvLogging default value
    */
    static
    bool defaultMpvLoggingValue()
    {
        return defaultMpvLoggingValue_helper();
    }


    enum {
      signalMpvLoggingChanged = 1
    };

  Q_SIGNALS:
    void MpvLoggingChanged();

  private:
    void itemChanged(quint64 signalFlag);

  protected:
    InformationSettings(QObject *parent = nullptr);
    friend class InformationSettingsHelper;


    // Information
    bool mMpvLogging;
    static bool defaultMpvLoggingValue_helper();

  private:
};

#endif

