/****************************************************************************
** Meta object code from reading C++ file 'actionsmodel.h'
**
** Created by: The Qt Meta Object Compiler version 68 (Qt 6.8.0)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include "../../models/actionsmodel.h"
#include <QtCore/qmetatype.h>

#include <QtCore/qtmochelpers.h>

#include <memory>


#include <QtCore/qxptype_traits.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'actionsmodel.h' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 68
#error "This file was generated using the moc from 6.8.0. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

#ifndef Q_CONSTINIT
#define Q_CONSTINIT
#endif

QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
QT_WARNING_DISABLE_GCC("-Wuseless-cast")
namespace {

#ifdef QT_MOC_HAS_STRINGDATA
struct qt_meta_stringdata_CLASSProxyActionsModelENDCLASS_t {};
constexpr auto qt_meta_stringdata_CLASSProxyActionsModelENDCLASS = QtMocHelpers::stringData(
    "ProxyActionsModel",
    "QML.Element",
    "setNameFilter",
    "",
    "regExp",
    "setTypeFilter",
    "saveShortcut",
    "row",
    "QVariant",
    "shortcut"
);
#else  // !QT_MOC_HAS_STRINGDATA
#error "qtmochelpers.h not found or too old."
#endif // !QT_MOC_HAS_STRINGDATA
} // unnamed namespace

Q_CONSTINIT static const uint qt_meta_data_CLASSProxyActionsModelENDCLASS[] = {

 // content:
      12,       // revision
       0,       // classname
       1,   14, // classinfo
       3,   16, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // classinfo: key, value
       1,    0,

 // slots: name, argc, parameters, tag, flags, initial metatype offsets
       2,    1,   34,    3, 0x0a,    1 /* Public */,
       5,    1,   37,    3, 0x0a,    3 /* Public */,
       6,    2,   40,    3, 0x0a,    5 /* Public */,

 // slots: parameters
    QMetaType::Void, QMetaType::QString,    4,
    QMetaType::Void, QMetaType::QString,    4,
    QMetaType::Bool, QMetaType::Int, 0x80000000 | 8,    7,    9,

       0        // eod
};

Q_CONSTINIT const QMetaObject ProxyActionsModel::staticMetaObject = { {
    QMetaObject::SuperData::link<QSortFilterProxyModel::staticMetaObject>(),
    qt_meta_stringdata_CLASSProxyActionsModelENDCLASS.offsetsAndSizes,
    qt_meta_data_CLASSProxyActionsModelENDCLASS,
    qt_static_metacall,
    nullptr,
    qt_metaTypeArray<
        // Q_OBJECT / Q_GADGET
        ProxyActionsModel,
        // method 'setNameFilter'
        void,
        const QString &,
        // method 'setTypeFilter'
        void,
        const QString &,
        // method 'saveShortcut'
        bool,
        int,
        const QVariant &
    >,
    nullptr
} };

void ProxyActionsModel::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        auto *_t = static_cast<ProxyActionsModel *>(_o);
        (void)_t;
        switch (_id) {
        case 0: _t->setNameFilter((*reinterpret_cast< std::add_pointer_t<QString>>(_a[1]))); break;
        case 1: _t->setTypeFilter((*reinterpret_cast< std::add_pointer_t<QString>>(_a[1]))); break;
        case 2: { bool _r = _t->saveShortcut((*reinterpret_cast< std::add_pointer_t<int>>(_a[1])),(*reinterpret_cast< std::add_pointer_t<QVariant>>(_a[2])));
            if (_a[0]) *reinterpret_cast< bool*>(_a[0]) = std::move(_r); }  break;
        default: ;
        }
    }
}

const QMetaObject *ProxyActionsModel::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *ProxyActionsModel::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_CLASSProxyActionsModelENDCLASS.stringdata0))
        return static_cast<void*>(this);
    return QSortFilterProxyModel::qt_metacast(_clname);
}

int ProxyActionsModel::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QSortFilterProxyModel::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 3)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 3;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 3)
            *reinterpret_cast<QMetaType *>(_a[0]) = QMetaType();
        _id -= 3;
    }
    return _id;
}
namespace {

#ifdef QT_MOC_HAS_STRINGDATA
struct qt_meta_stringdata_CLASSActionsModelENDCLASS_t {};
constexpr auto qt_meta_stringdata_CLASSActionsModelENDCLASS = QtMocHelpers::stringData(
    "ActionsModel",
    "QML.Element",
    "shortcutChanged",
    "",
    "actionName",
    "actionShortcut",
    "openActionsDialogAction",
    "aboutHarunaAction",
    "audioCycleUpAction",
    "audioCycleDownAction",
    "configureAction",
    "configureShortcutsAction",
    "exitFullscreenAction",
    "frameStepForwardAction",
    "frameStepBackwardAction",
    "loadLastPlayedFileAction",
    "muteAction",
    "openContextMenuAction",
    "openFileAction",
    "openSubtitlesFileAction",
    "openUrlAction",
    "playbackSpeedIncreaseAction",
    "playbackSpeedDecreaseAction",
    "playbackSpeedResetAction",
    "playPauseAction",
    "playNextAction",
    "playPreviousAction",
    "quitApplicationAction",
    "restartPlaybackAction",
    "seekForwardSmallAction",
    "seekBackwardSmallAction",
    "seekForwardMediumAction",
    "seekBackwardMediumAction",
    "seekForwardBigAction",
    "seekBackwardBigAction",
    "seekNextChapterAction",
    "seekPreviousChapterAction",
    "seekNextSubtitleAction",
    "seekPreviousSubtitleAction",
    "seekToWatchLaterPositionAction",
    "setLoopAction",
    "screenshotAction",
    "subtitleToggleAction",
    "subtitleIncreaseFontSizeAction",
    "subtitleDecreaseFontSizeAction",
    "subtitleMoveUpAction",
    "subtitleMoveDownAction",
    "subtitleQuickenAction",
    "subtitleDelayAction",
    "subtitleCycleUpAction",
    "subtitleCycleDownAction",
    "toggleDeinterlacingAction",
    "toggleFullscreenAction",
    "toggleMenuBarAction",
    "toggleHeaderAction",
    "togglePlaylistAction",
    "videoPanXLeftAction",
    "videoPanXRightAction",
    "videoPanYUpAction",
    "videoPanYDownAction",
    "volumeUpAction",
    "volumeDownAction",
    "zoomInAction",
    "zoomOutAction",
    "zoomResetAction",
    "contrastUpAction",
    "contrastDownAction",
    "contrastResetAction",
    "brightnessUpAction",
    "brightnessDownAction",
    "brightnessResetAction",
    "gammaUpAction",
    "gammaDownAction",
    "gammaResetAction",
    "saturationUpAction",
    "saturationDownAction",
    "saturationResetAction",
    "saveShortcut",
    "name",
    "QVariant",
    "shortcut",
    "row",
    "getShortcut",
    "key",
    "QKeySequence",
    "defaultValue",
    "signalEmitter"
);
#else  // !QT_MOC_HAS_STRINGDATA
#error "qtmochelpers.h not found or too old."
#endif // !QT_MOC_HAS_STRINGDATA
} // unnamed namespace

Q_CONSTINIT static const uint qt_meta_data_CLASSActionsModelENDCLASS[] = {

 // content:
      12,       // revision
       0,       // classname
       1,   14, // classinfo
      76,   16, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
      72,       // signalCount

 // classinfo: key, value
       1,    0,

 // signals: name, argc, parameters, tag, flags, initial metatype offsets
       2,    2,  472,    3, 0x06,    1 /* Public */,
       6,    0,  477,    3, 0x06,    4 /* Public */,
       7,    0,  478,    3, 0x06,    5 /* Public */,
       8,    0,  479,    3, 0x06,    6 /* Public */,
       9,    0,  480,    3, 0x06,    7 /* Public */,
      10,    0,  481,    3, 0x06,    8 /* Public */,
      11,    0,  482,    3, 0x06,    9 /* Public */,
      12,    0,  483,    3, 0x06,   10 /* Public */,
      13,    0,  484,    3, 0x06,   11 /* Public */,
      14,    0,  485,    3, 0x06,   12 /* Public */,
      15,    0,  486,    3, 0x06,   13 /* Public */,
      16,    0,  487,    3, 0x06,   14 /* Public */,
      17,    0,  488,    3, 0x06,   15 /* Public */,
      18,    0,  489,    3, 0x06,   16 /* Public */,
      19,    0,  490,    3, 0x06,   17 /* Public */,
      20,    0,  491,    3, 0x06,   18 /* Public */,
      21,    0,  492,    3, 0x06,   19 /* Public */,
      22,    0,  493,    3, 0x06,   20 /* Public */,
      23,    0,  494,    3, 0x06,   21 /* Public */,
      24,    0,  495,    3, 0x06,   22 /* Public */,
      25,    0,  496,    3, 0x06,   23 /* Public */,
      26,    0,  497,    3, 0x06,   24 /* Public */,
      27,    0,  498,    3, 0x06,   25 /* Public */,
      28,    0,  499,    3, 0x06,   26 /* Public */,
      29,    0,  500,    3, 0x06,   27 /* Public */,
      30,    0,  501,    3, 0x06,   28 /* Public */,
      31,    0,  502,    3, 0x06,   29 /* Public */,
      32,    0,  503,    3, 0x06,   30 /* Public */,
      33,    0,  504,    3, 0x06,   31 /* Public */,
      34,    0,  505,    3, 0x06,   32 /* Public */,
      35,    0,  506,    3, 0x06,   33 /* Public */,
      36,    0,  507,    3, 0x06,   34 /* Public */,
      37,    0,  508,    3, 0x06,   35 /* Public */,
      38,    0,  509,    3, 0x06,   36 /* Public */,
      39,    0,  510,    3, 0x06,   37 /* Public */,
      40,    0,  511,    3, 0x06,   38 /* Public */,
      41,    0,  512,    3, 0x06,   39 /* Public */,
      42,    0,  513,    3, 0x06,   40 /* Public */,
      43,    0,  514,    3, 0x06,   41 /* Public */,
      44,    0,  515,    3, 0x06,   42 /* Public */,
      45,    0,  516,    3, 0x06,   43 /* Public */,
      46,    0,  517,    3, 0x06,   44 /* Public */,
      47,    0,  518,    3, 0x06,   45 /* Public */,
      48,    0,  519,    3, 0x06,   46 /* Public */,
      49,    0,  520,    3, 0x06,   47 /* Public */,
      50,    0,  521,    3, 0x06,   48 /* Public */,
      51,    0,  522,    3, 0x06,   49 /* Public */,
      52,    0,  523,    3, 0x06,   50 /* Public */,
      53,    0,  524,    3, 0x06,   51 /* Public */,
      54,    0,  525,    3, 0x06,   52 /* Public */,
      55,    0,  526,    3, 0x06,   53 /* Public */,
      56,    0,  527,    3, 0x06,   54 /* Public */,
      57,    0,  528,    3, 0x06,   55 /* Public */,
      58,    0,  529,    3, 0x06,   56 /* Public */,
      59,    0,  530,    3, 0x06,   57 /* Public */,
      60,    0,  531,    3, 0x06,   58 /* Public */,
      61,    0,  532,    3, 0x06,   59 /* Public */,
      62,    0,  533,    3, 0x06,   60 /* Public */,
      63,    0,  534,    3, 0x06,   61 /* Public */,
      64,    0,  535,    3, 0x06,   62 /* Public */,
      65,    0,  536,    3, 0x06,   63 /* Public */,
      66,    0,  537,    3, 0x06,   64 /* Public */,
      67,    0,  538,    3, 0x06,   65 /* Public */,
      68,    0,  539,    3, 0x06,   66 /* Public */,
      69,    0,  540,    3, 0x06,   67 /* Public */,
      70,    0,  541,    3, 0x06,   68 /* Public */,
      71,    0,  542,    3, 0x06,   69 /* Public */,
      72,    0,  543,    3, 0x06,   70 /* Public */,
      73,    0,  544,    3, 0x06,   71 /* Public */,
      74,    0,  545,    3, 0x06,   72 /* Public */,
      75,    0,  546,    3, 0x06,   73 /* Public */,
      76,    0,  547,    3, 0x06,   74 /* Public */,

 // methods: name, argc, parameters, tag, flags, initial metatype offsets
      77,    2,  548,    3, 0x02,   75 /* Public */,
      77,    2,  553,    3, 0x02,   78 /* Public */,
      82,    2,  558,    3, 0x102,   81 /* Public | MethodIsConst  */,
      86,    1,  563,    3, 0x02,   84 /* Public */,

 // signals: parameters
    QMetaType::Void, QMetaType::QString, QMetaType::QString,    4,    5,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,

 // methods: parameters
    QMetaType::Bool, QMetaType::QString, 0x80000000 | 79,   78,   80,
    QMetaType::Bool, QMetaType::Int, 0x80000000 | 79,   81,   80,
    QMetaType::QString, QMetaType::QString, 0x80000000 | 84,   83,   85,
    QMetaType::Void, QMetaType::QString,    4,

       0        // eod
};

Q_CONSTINIT const QMetaObject ActionsModel::staticMetaObject = { {
    QMetaObject::SuperData::link<QAbstractListModel::staticMetaObject>(),
    qt_meta_stringdata_CLASSActionsModelENDCLASS.offsetsAndSizes,
    qt_meta_data_CLASSActionsModelENDCLASS,
    qt_static_metacall,
    nullptr,
    qt_metaTypeArray<
        // Q_OBJECT / Q_GADGET
        ActionsModel,
        // method 'shortcutChanged'
        void,
        const QString &,
        const QString &,
        // method 'openActionsDialogAction'
        void,
        // method 'aboutHarunaAction'
        void,
        // method 'audioCycleUpAction'
        void,
        // method 'audioCycleDownAction'
        void,
        // method 'configureAction'
        void,
        // method 'configureShortcutsAction'
        void,
        // method 'exitFullscreenAction'
        void,
        // method 'frameStepForwardAction'
        void,
        // method 'frameStepBackwardAction'
        void,
        // method 'loadLastPlayedFileAction'
        void,
        // method 'muteAction'
        void,
        // method 'openContextMenuAction'
        void,
        // method 'openFileAction'
        void,
        // method 'openSubtitlesFileAction'
        void,
        // method 'openUrlAction'
        void,
        // method 'playbackSpeedIncreaseAction'
        void,
        // method 'playbackSpeedDecreaseAction'
        void,
        // method 'playbackSpeedResetAction'
        void,
        // method 'playPauseAction'
        void,
        // method 'playNextAction'
        void,
        // method 'playPreviousAction'
        void,
        // method 'quitApplicationAction'
        void,
        // method 'restartPlaybackAction'
        void,
        // method 'seekForwardSmallAction'
        void,
        // method 'seekBackwardSmallAction'
        void,
        // method 'seekForwardMediumAction'
        void,
        // method 'seekBackwardMediumAction'
        void,
        // method 'seekForwardBigAction'
        void,
        // method 'seekBackwardBigAction'
        void,
        // method 'seekNextChapterAction'
        void,
        // method 'seekPreviousChapterAction'
        void,
        // method 'seekNextSubtitleAction'
        void,
        // method 'seekPreviousSubtitleAction'
        void,
        // method 'seekToWatchLaterPositionAction'
        void,
        // method 'setLoopAction'
        void,
        // method 'screenshotAction'
        void,
        // method 'subtitleToggleAction'
        void,
        // method 'subtitleIncreaseFontSizeAction'
        void,
        // method 'subtitleDecreaseFontSizeAction'
        void,
        // method 'subtitleMoveUpAction'
        void,
        // method 'subtitleMoveDownAction'
        void,
        // method 'subtitleQuickenAction'
        void,
        // method 'subtitleDelayAction'
        void,
        // method 'subtitleCycleUpAction'
        void,
        // method 'subtitleCycleDownAction'
        void,
        // method 'toggleDeinterlacingAction'
        void,
        // method 'toggleFullscreenAction'
        void,
        // method 'toggleMenuBarAction'
        void,
        // method 'toggleHeaderAction'
        void,
        // method 'togglePlaylistAction'
        void,
        // method 'videoPanXLeftAction'
        void,
        // method 'videoPanXRightAction'
        void,
        // method 'videoPanYUpAction'
        void,
        // method 'videoPanYDownAction'
        void,
        // method 'volumeUpAction'
        void,
        // method 'volumeDownAction'
        void,
        // method 'zoomInAction'
        void,
        // method 'zoomOutAction'
        void,
        // method 'zoomResetAction'
        void,
        // method 'contrastUpAction'
        void,
        // method 'contrastDownAction'
        void,
        // method 'contrastResetAction'
        void,
        // method 'brightnessUpAction'
        void,
        // method 'brightnessDownAction'
        void,
        // method 'brightnessResetAction'
        void,
        // method 'gammaUpAction'
        void,
        // method 'gammaDownAction'
        void,
        // method 'gammaResetAction'
        void,
        // method 'saturationUpAction'
        void,
        // method 'saturationDownAction'
        void,
        // method 'saturationResetAction'
        void,
        // method 'saveShortcut'
        bool,
        const QString &,
        const QVariant &,
        // method 'saveShortcut'
        bool,
        int,
        const QVariant &,
        // method 'getShortcut'
        QString,
        const QString &,
        const QKeySequence &,
        // method 'signalEmitter'
        void,
        const QString &
    >,
    nullptr
} };

void ActionsModel::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        auto *_t = static_cast<ActionsModel *>(_o);
        (void)_t;
        switch (_id) {
        case 0: _t->shortcutChanged((*reinterpret_cast< std::add_pointer_t<QString>>(_a[1])),(*reinterpret_cast< std::add_pointer_t<QString>>(_a[2]))); break;
        case 1: _t->openActionsDialogAction(); break;
        case 2: _t->aboutHarunaAction(); break;
        case 3: _t->audioCycleUpAction(); break;
        case 4: _t->audioCycleDownAction(); break;
        case 5: _t->configureAction(); break;
        case 6: _t->configureShortcutsAction(); break;
        case 7: _t->exitFullscreenAction(); break;
        case 8: _t->frameStepForwardAction(); break;
        case 9: _t->frameStepBackwardAction(); break;
        case 10: _t->loadLastPlayedFileAction(); break;
        case 11: _t->muteAction(); break;
        case 12: _t->openContextMenuAction(); break;
        case 13: _t->openFileAction(); break;
        case 14: _t->openSubtitlesFileAction(); break;
        case 15: _t->openUrlAction(); break;
        case 16: _t->playbackSpeedIncreaseAction(); break;
        case 17: _t->playbackSpeedDecreaseAction(); break;
        case 18: _t->playbackSpeedResetAction(); break;
        case 19: _t->playPauseAction(); break;
        case 20: _t->playNextAction(); break;
        case 21: _t->playPreviousAction(); break;
        case 22: _t->quitApplicationAction(); break;
        case 23: _t->restartPlaybackAction(); break;
        case 24: _t->seekForwardSmallAction(); break;
        case 25: _t->seekBackwardSmallAction(); break;
        case 26: _t->seekForwardMediumAction(); break;
        case 27: _t->seekBackwardMediumAction(); break;
        case 28: _t->seekForwardBigAction(); break;
        case 29: _t->seekBackwardBigAction(); break;
        case 30: _t->seekNextChapterAction(); break;
        case 31: _t->seekPreviousChapterAction(); break;
        case 32: _t->seekNextSubtitleAction(); break;
        case 33: _t->seekPreviousSubtitleAction(); break;
        case 34: _t->seekToWatchLaterPositionAction(); break;
        case 35: _t->setLoopAction(); break;
        case 36: _t->screenshotAction(); break;
        case 37: _t->subtitleToggleAction(); break;
        case 38: _t->subtitleIncreaseFontSizeAction(); break;
        case 39: _t->subtitleDecreaseFontSizeAction(); break;
        case 40: _t->subtitleMoveUpAction(); break;
        case 41: _t->subtitleMoveDownAction(); break;
        case 42: _t->subtitleQuickenAction(); break;
        case 43: _t->subtitleDelayAction(); break;
        case 44: _t->subtitleCycleUpAction(); break;
        case 45: _t->subtitleCycleDownAction(); break;
        case 46: _t->toggleDeinterlacingAction(); break;
        case 47: _t->toggleFullscreenAction(); break;
        case 48: _t->toggleMenuBarAction(); break;
        case 49: _t->toggleHeaderAction(); break;
        case 50: _t->togglePlaylistAction(); break;
        case 51: _t->videoPanXLeftAction(); break;
        case 52: _t->videoPanXRightAction(); break;
        case 53: _t->videoPanYUpAction(); break;
        case 54: _t->videoPanYDownAction(); break;
        case 55: _t->volumeUpAction(); break;
        case 56: _t->volumeDownAction(); break;
        case 57: _t->zoomInAction(); break;
        case 58: _t->zoomOutAction(); break;
        case 59: _t->zoomResetAction(); break;
        case 60: _t->contrastUpAction(); break;
        case 61: _t->contrastDownAction(); break;
        case 62: _t->contrastResetAction(); break;
        case 63: _t->brightnessUpAction(); break;
        case 64: _t->brightnessDownAction(); break;
        case 65: _t->brightnessResetAction(); break;
        case 66: _t->gammaUpAction(); break;
        case 67: _t->gammaDownAction(); break;
        case 68: _t->gammaResetAction(); break;
        case 69: _t->saturationUpAction(); break;
        case 70: _t->saturationDownAction(); break;
        case 71: _t->saturationResetAction(); break;
        case 72: { bool _r = _t->saveShortcut((*reinterpret_cast< std::add_pointer_t<QString>>(_a[1])),(*reinterpret_cast< std::add_pointer_t<QVariant>>(_a[2])));
            if (_a[0]) *reinterpret_cast< bool*>(_a[0]) = std::move(_r); }  break;
        case 73: { bool _r = _t->saveShortcut((*reinterpret_cast< std::add_pointer_t<int>>(_a[1])),(*reinterpret_cast< std::add_pointer_t<QVariant>>(_a[2])));
            if (_a[0]) *reinterpret_cast< bool*>(_a[0]) = std::move(_r); }  break;
        case 74: { QString _r = _t->getShortcut((*reinterpret_cast< std::add_pointer_t<QString>>(_a[1])),(*reinterpret_cast< std::add_pointer_t<QKeySequence>>(_a[2])));
            if (_a[0]) *reinterpret_cast< QString*>(_a[0]) = std::move(_r); }  break;
        case 75: _t->signalEmitter((*reinterpret_cast< std::add_pointer_t<QString>>(_a[1]))); break;
        default: ;
        }
    } else if (_c == QMetaObject::IndexOfMethod) {
        int *result = reinterpret_cast<int *>(_a[0]);
        {
            using _t = void (ActionsModel::*)(const QString & , const QString & );
            if (_t _q_method = &ActionsModel::shortcutChanged; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 0;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::openActionsDialogAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 1;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::aboutHarunaAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 2;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::audioCycleUpAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 3;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::audioCycleDownAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 4;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::configureAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 5;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::configureShortcutsAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 6;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::exitFullscreenAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 7;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::frameStepForwardAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 8;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::frameStepBackwardAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 9;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::loadLastPlayedFileAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 10;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::muteAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 11;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::openContextMenuAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 12;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::openFileAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 13;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::openSubtitlesFileAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 14;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::openUrlAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 15;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::playbackSpeedIncreaseAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 16;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::playbackSpeedDecreaseAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 17;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::playbackSpeedResetAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 18;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::playPauseAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 19;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::playNextAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 20;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::playPreviousAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 21;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::quitApplicationAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 22;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::restartPlaybackAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 23;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::seekForwardSmallAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 24;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::seekBackwardSmallAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 25;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::seekForwardMediumAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 26;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::seekBackwardMediumAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 27;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::seekForwardBigAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 28;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::seekBackwardBigAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 29;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::seekNextChapterAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 30;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::seekPreviousChapterAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 31;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::seekNextSubtitleAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 32;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::seekPreviousSubtitleAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 33;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::seekToWatchLaterPositionAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 34;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::setLoopAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 35;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::screenshotAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 36;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::subtitleToggleAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 37;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::subtitleIncreaseFontSizeAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 38;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::subtitleDecreaseFontSizeAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 39;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::subtitleMoveUpAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 40;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::subtitleMoveDownAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 41;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::subtitleQuickenAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 42;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::subtitleDelayAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 43;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::subtitleCycleUpAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 44;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::subtitleCycleDownAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 45;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::toggleDeinterlacingAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 46;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::toggleFullscreenAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 47;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::toggleMenuBarAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 48;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::toggleHeaderAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 49;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::togglePlaylistAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 50;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::videoPanXLeftAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 51;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::videoPanXRightAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 52;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::videoPanYUpAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 53;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::videoPanYDownAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 54;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::volumeUpAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 55;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::volumeDownAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 56;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::zoomInAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 57;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::zoomOutAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 58;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::zoomResetAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 59;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::contrastUpAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 60;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::contrastDownAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 61;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::contrastResetAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 62;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::brightnessUpAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 63;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::brightnessDownAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 64;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::brightnessResetAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 65;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::gammaUpAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 66;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::gammaDownAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 67;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::gammaResetAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 68;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::saturationUpAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 69;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::saturationDownAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 70;
                return;
            }
        }
        {
            using _t = void (ActionsModel::*)();
            if (_t _q_method = &ActionsModel::saturationResetAction; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 71;
                return;
            }
        }
    }
}

const QMetaObject *ActionsModel::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *ActionsModel::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_CLASSActionsModelENDCLASS.stringdata0))
        return static_cast<void*>(this);
    return QAbstractListModel::qt_metacast(_clname);
}

int ActionsModel::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QAbstractListModel::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 76)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 76;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 76)
            *reinterpret_cast<QMetaType *>(_a[0]) = QMetaType();
        _id -= 76;
    }
    return _id;
}

// SIGNAL 0
void ActionsModel::shortcutChanged(const QString & _t1, const QString & _t2)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))), const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t2))) };
    QMetaObject::activate(this, &staticMetaObject, 0, _a);
}

// SIGNAL 1
void ActionsModel::openActionsDialogAction()
{
    QMetaObject::activate(this, &staticMetaObject, 1, nullptr);
}

// SIGNAL 2
void ActionsModel::aboutHarunaAction()
{
    QMetaObject::activate(this, &staticMetaObject, 2, nullptr);
}

// SIGNAL 3
void ActionsModel::audioCycleUpAction()
{
    QMetaObject::activate(this, &staticMetaObject, 3, nullptr);
}

// SIGNAL 4
void ActionsModel::audioCycleDownAction()
{
    QMetaObject::activate(this, &staticMetaObject, 4, nullptr);
}

// SIGNAL 5
void ActionsModel::configureAction()
{
    QMetaObject::activate(this, &staticMetaObject, 5, nullptr);
}

// SIGNAL 6
void ActionsModel::configureShortcutsAction()
{
    QMetaObject::activate(this, &staticMetaObject, 6, nullptr);
}

// SIGNAL 7
void ActionsModel::exitFullscreenAction()
{
    QMetaObject::activate(this, &staticMetaObject, 7, nullptr);
}

// SIGNAL 8
void ActionsModel::frameStepForwardAction()
{
    QMetaObject::activate(this, &staticMetaObject, 8, nullptr);
}

// SIGNAL 9
void ActionsModel::frameStepBackwardAction()
{
    QMetaObject::activate(this, &staticMetaObject, 9, nullptr);
}

// SIGNAL 10
void ActionsModel::loadLastPlayedFileAction()
{
    QMetaObject::activate(this, &staticMetaObject, 10, nullptr);
}

// SIGNAL 11
void ActionsModel::muteAction()
{
    QMetaObject::activate(this, &staticMetaObject, 11, nullptr);
}

// SIGNAL 12
void ActionsModel::openContextMenuAction()
{
    QMetaObject::activate(this, &staticMetaObject, 12, nullptr);
}

// SIGNAL 13
void ActionsModel::openFileAction()
{
    QMetaObject::activate(this, &staticMetaObject, 13, nullptr);
}

// SIGNAL 14
void ActionsModel::openSubtitlesFileAction()
{
    QMetaObject::activate(this, &staticMetaObject, 14, nullptr);
}

// SIGNAL 15
void ActionsModel::openUrlAction()
{
    QMetaObject::activate(this, &staticMetaObject, 15, nullptr);
}

// SIGNAL 16
void ActionsModel::playbackSpeedIncreaseAction()
{
    QMetaObject::activate(this, &staticMetaObject, 16, nullptr);
}

// SIGNAL 17
void ActionsModel::playbackSpeedDecreaseAction()
{
    QMetaObject::activate(this, &staticMetaObject, 17, nullptr);
}

// SIGNAL 18
void ActionsModel::playbackSpeedResetAction()
{
    QMetaObject::activate(this, &staticMetaObject, 18, nullptr);
}

// SIGNAL 19
void ActionsModel::playPauseAction()
{
    QMetaObject::activate(this, &staticMetaObject, 19, nullptr);
}

// SIGNAL 20
void ActionsModel::playNextAction()
{
    QMetaObject::activate(this, &staticMetaObject, 20, nullptr);
}

// SIGNAL 21
void ActionsModel::playPreviousAction()
{
    QMetaObject::activate(this, &staticMetaObject, 21, nullptr);
}

// SIGNAL 22
void ActionsModel::quitApplicationAction()
{
    QMetaObject::activate(this, &staticMetaObject, 22, nullptr);
}

// SIGNAL 23
void ActionsModel::restartPlaybackAction()
{
    QMetaObject::activate(this, &staticMetaObject, 23, nullptr);
}

// SIGNAL 24
void ActionsModel::seekForwardSmallAction()
{
    QMetaObject::activate(this, &staticMetaObject, 24, nullptr);
}

// SIGNAL 25
void ActionsModel::seekBackwardSmallAction()
{
    QMetaObject::activate(this, &staticMetaObject, 25, nullptr);
}

// SIGNAL 26
void ActionsModel::seekForwardMediumAction()
{
    QMetaObject::activate(this, &staticMetaObject, 26, nullptr);
}

// SIGNAL 27
void ActionsModel::seekBackwardMediumAction()
{
    QMetaObject::activate(this, &staticMetaObject, 27, nullptr);
}

// SIGNAL 28
void ActionsModel::seekForwardBigAction()
{
    QMetaObject::activate(this, &staticMetaObject, 28, nullptr);
}

// SIGNAL 29
void ActionsModel::seekBackwardBigAction()
{
    QMetaObject::activate(this, &staticMetaObject, 29, nullptr);
}

// SIGNAL 30
void ActionsModel::seekNextChapterAction()
{
    QMetaObject::activate(this, &staticMetaObject, 30, nullptr);
}

// SIGNAL 31
void ActionsModel::seekPreviousChapterAction()
{
    QMetaObject::activate(this, &staticMetaObject, 31, nullptr);
}

// SIGNAL 32
void ActionsModel::seekNextSubtitleAction()
{
    QMetaObject::activate(this, &staticMetaObject, 32, nullptr);
}

// SIGNAL 33
void ActionsModel::seekPreviousSubtitleAction()
{
    QMetaObject::activate(this, &staticMetaObject, 33, nullptr);
}

// SIGNAL 34
void ActionsModel::seekToWatchLaterPositionAction()
{
    QMetaObject::activate(this, &staticMetaObject, 34, nullptr);
}

// SIGNAL 35
void ActionsModel::setLoopAction()
{
    QMetaObject::activate(this, &staticMetaObject, 35, nullptr);
}

// SIGNAL 36
void ActionsModel::screenshotAction()
{
    QMetaObject::activate(this, &staticMetaObject, 36, nullptr);
}

// SIGNAL 37
void ActionsModel::subtitleToggleAction()
{
    QMetaObject::activate(this, &staticMetaObject, 37, nullptr);
}

// SIGNAL 38
void ActionsModel::subtitleIncreaseFontSizeAction()
{
    QMetaObject::activate(this, &staticMetaObject, 38, nullptr);
}

// SIGNAL 39
void ActionsModel::subtitleDecreaseFontSizeAction()
{
    QMetaObject::activate(this, &staticMetaObject, 39, nullptr);
}

// SIGNAL 40
void ActionsModel::subtitleMoveUpAction()
{
    QMetaObject::activate(this, &staticMetaObject, 40, nullptr);
}

// SIGNAL 41
void ActionsModel::subtitleMoveDownAction()
{
    QMetaObject::activate(this, &staticMetaObject, 41, nullptr);
}

// SIGNAL 42
void ActionsModel::subtitleQuickenAction()
{
    QMetaObject::activate(this, &staticMetaObject, 42, nullptr);
}

// SIGNAL 43
void ActionsModel::subtitleDelayAction()
{
    QMetaObject::activate(this, &staticMetaObject, 43, nullptr);
}

// SIGNAL 44
void ActionsModel::subtitleCycleUpAction()
{
    QMetaObject::activate(this, &staticMetaObject, 44, nullptr);
}

// SIGNAL 45
void ActionsModel::subtitleCycleDownAction()
{
    QMetaObject::activate(this, &staticMetaObject, 45, nullptr);
}

// SIGNAL 46
void ActionsModel::toggleDeinterlacingAction()
{
    QMetaObject::activate(this, &staticMetaObject, 46, nullptr);
}

// SIGNAL 47
void ActionsModel::toggleFullscreenAction()
{
    QMetaObject::activate(this, &staticMetaObject, 47, nullptr);
}

// SIGNAL 48
void ActionsModel::toggleMenuBarAction()
{
    QMetaObject::activate(this, &staticMetaObject, 48, nullptr);
}

// SIGNAL 49
void ActionsModel::toggleHeaderAction()
{
    QMetaObject::activate(this, &staticMetaObject, 49, nullptr);
}

// SIGNAL 50
void ActionsModel::togglePlaylistAction()
{
    QMetaObject::activate(this, &staticMetaObject, 50, nullptr);
}

// SIGNAL 51
void ActionsModel::videoPanXLeftAction()
{
    QMetaObject::activate(this, &staticMetaObject, 51, nullptr);
}

// SIGNAL 52
void ActionsModel::videoPanXRightAction()
{
    QMetaObject::activate(this, &staticMetaObject, 52, nullptr);
}

// SIGNAL 53
void ActionsModel::videoPanYUpAction()
{
    QMetaObject::activate(this, &staticMetaObject, 53, nullptr);
}

// SIGNAL 54
void ActionsModel::videoPanYDownAction()
{
    QMetaObject::activate(this, &staticMetaObject, 54, nullptr);
}

// SIGNAL 55
void ActionsModel::volumeUpAction()
{
    QMetaObject::activate(this, &staticMetaObject, 55, nullptr);
}

// SIGNAL 56
void ActionsModel::volumeDownAction()
{
    QMetaObject::activate(this, &staticMetaObject, 56, nullptr);
}

// SIGNAL 57
void ActionsModel::zoomInAction()
{
    QMetaObject::activate(this, &staticMetaObject, 57, nullptr);
}

// SIGNAL 58
void ActionsModel::zoomOutAction()
{
    QMetaObject::activate(this, &staticMetaObject, 58, nullptr);
}

// SIGNAL 59
void ActionsModel::zoomResetAction()
{
    QMetaObject::activate(this, &staticMetaObject, 59, nullptr);
}

// SIGNAL 60
void ActionsModel::contrastUpAction()
{
    QMetaObject::activate(this, &staticMetaObject, 60, nullptr);
}

// SIGNAL 61
void ActionsModel::contrastDownAction()
{
    QMetaObject::activate(this, &staticMetaObject, 61, nullptr);
}

// SIGNAL 62
void ActionsModel::contrastResetAction()
{
    QMetaObject::activate(this, &staticMetaObject, 62, nullptr);
}

// SIGNAL 63
void ActionsModel::brightnessUpAction()
{
    QMetaObject::activate(this, &staticMetaObject, 63, nullptr);
}

// SIGNAL 64
void ActionsModel::brightnessDownAction()
{
    QMetaObject::activate(this, &staticMetaObject, 64, nullptr);
}

// SIGNAL 65
void ActionsModel::brightnessResetAction()
{
    QMetaObject::activate(this, &staticMetaObject, 65, nullptr);
}

// SIGNAL 66
void ActionsModel::gammaUpAction()
{
    QMetaObject::activate(this, &staticMetaObject, 66, nullptr);
}

// SIGNAL 67
void ActionsModel::gammaDownAction()
{
    QMetaObject::activate(this, &staticMetaObject, 67, nullptr);
}

// SIGNAL 68
void ActionsModel::gammaResetAction()
{
    QMetaObject::activate(this, &staticMetaObject, 68, nullptr);
}

// SIGNAL 69
void ActionsModel::saturationUpAction()
{
    QMetaObject::activate(this, &staticMetaObject, 69, nullptr);
}

// SIGNAL 70
void ActionsModel::saturationDownAction()
{
    QMetaObject::activate(this, &staticMetaObject, 70, nullptr);
}

// SIGNAL 71
void ActionsModel::saturationResetAction()
{
    QMetaObject::activate(this, &staticMetaObject, 71, nullptr);
}
QT_WARNING_POP
