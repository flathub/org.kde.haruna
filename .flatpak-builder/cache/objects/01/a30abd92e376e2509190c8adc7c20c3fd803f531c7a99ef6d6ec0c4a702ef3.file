/****************************************************************************
** Meta object code from reading C++ file 'mousesettings.h'
**
** Created by: The Qt Meta Object Compiler version 68 (Qt 6.8.0)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include "../../mousesettings.h"
#include <QtCore/qmetatype.h>

#include <QtCore/qtmochelpers.h>

#include <memory>


#include <QtCore/qxptype_traits.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'mousesettings.h' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 68
#error "This file was generated using the moc from 6.8.0. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

#ifndef Q_CONSTINIT
#define Q_CONSTINIT
#endif

QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
QT_WARNING_DISABLE_GCC("-Wuseless-cast")
namespace {

#ifdef QT_MOC_HAS_STRINGDATA
struct qt_meta_stringdata_CLASSMouseSettingsENDCLASS_t {};
constexpr auto qt_meta_stringdata_CLASSMouseSettingsENDCLASS = QtMocHelpers::stringData(
    "MouseSettings",
    "LeftChanged",
    "",
    "Leftx2Changed",
    "MiddleChanged",
    "Middlex2Changed",
    "RightChanged",
    "Rightx2Changed",
    "ScrollUpChanged",
    "ScrollDownChanged",
    "left",
    "isLeftImmutable",
    "leftx2",
    "isLeftx2Immutable",
    "middle",
    "isMiddleImmutable",
    "middlex2",
    "isMiddlex2Immutable",
    "right",
    "isRightImmutable",
    "rightx2",
    "isRightx2Immutable",
    "scrollUp",
    "isScrollUpImmutable",
    "scrollDown",
    "isScrollDownImmutable"
);
#else  // !QT_MOC_HAS_STRINGDATA
#error "qtmochelpers.h not found or too old."
#endif // !QT_MOC_HAS_STRINGDATA
} // unnamed namespace

Q_CONSTINIT static const uint qt_meta_data_CLASSMouseSettingsENDCLASS[] = {

 // content:
      12,       // revision
       0,       // classname
       0,    0, // classinfo
       8,   14, // methods
      16,   70, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       8,       // signalCount

 // signals: name, argc, parameters, tag, flags, initial metatype offsets
       1,    0,   62,    2, 0x06,   17 /* Public */,
       3,    0,   63,    2, 0x06,   18 /* Public */,
       4,    0,   64,    2, 0x06,   19 /* Public */,
       5,    0,   65,    2, 0x06,   20 /* Public */,
       6,    0,   66,    2, 0x06,   21 /* Public */,
       7,    0,   67,    2, 0x06,   22 /* Public */,
       8,    0,   68,    2, 0x06,   23 /* Public */,
       9,    0,   69,    2, 0x06,   24 /* Public */,

 // signals: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,

 // properties: name, type, flags, notifyId, revision
      10, QMetaType::QString, 0x00015103, uint(0), 0,
      11, QMetaType::Bool, 0x00015401, uint(-1), 0,
      12, QMetaType::QString, 0x00015103, uint(1), 0,
      13, QMetaType::Bool, 0x00015401, uint(-1), 0,
      14, QMetaType::QString, 0x00015103, uint(2), 0,
      15, QMetaType::Bool, 0x00015401, uint(-1), 0,
      16, QMetaType::QString, 0x00015103, uint(3), 0,
      17, QMetaType::Bool, 0x00015401, uint(-1), 0,
      18, QMetaType::QString, 0x00015103, uint(4), 0,
      19, QMetaType::Bool, 0x00015401, uint(-1), 0,
      20, QMetaType::QString, 0x00015103, uint(5), 0,
      21, QMetaType::Bool, 0x00015401, uint(-1), 0,
      22, QMetaType::QString, 0x00015103, uint(6), 0,
      23, QMetaType::Bool, 0x00015401, uint(-1), 0,
      24, QMetaType::QString, 0x00015103, uint(7), 0,
      25, QMetaType::Bool, 0x00015401, uint(-1), 0,

       0        // eod
};

Q_CONSTINIT const QMetaObject MouseSettings::staticMetaObject = { {
    QMetaObject::SuperData::link<KConfigSkeleton::staticMetaObject>(),
    qt_meta_stringdata_CLASSMouseSettingsENDCLASS.offsetsAndSizes,
    qt_meta_data_CLASSMouseSettingsENDCLASS,
    qt_static_metacall,
    nullptr,
    qt_incomplete_metaTypeArray<qt_meta_stringdata_CLASSMouseSettingsENDCLASS_t,
        // property 'left'
        QtPrivate::TypeAndForceComplete<QString, std::true_type>,
        // property 'isLeftImmutable'
        QtPrivate::TypeAndForceComplete<bool, std::true_type>,
        // property 'leftx2'
        QtPrivate::TypeAndForceComplete<QString, std::true_type>,
        // property 'isLeftx2Immutable'
        QtPrivate::TypeAndForceComplete<bool, std::true_type>,
        // property 'middle'
        QtPrivate::TypeAndForceComplete<QString, std::true_type>,
        // property 'isMiddleImmutable'
        QtPrivate::TypeAndForceComplete<bool, std::true_type>,
        // property 'middlex2'
        QtPrivate::TypeAndForceComplete<QString, std::true_type>,
        // property 'isMiddlex2Immutable'
        QtPrivate::TypeAndForceComplete<bool, std::true_type>,
        // property 'right'
        QtPrivate::TypeAndForceComplete<QString, std::true_type>,
        // property 'isRightImmutable'
        QtPrivate::TypeAndForceComplete<bool, std::true_type>,
        // property 'rightx2'
        QtPrivate::TypeAndForceComplete<QString, std::true_type>,
        // property 'isRightx2Immutable'
        QtPrivate::TypeAndForceComplete<bool, std::true_type>,
        // property 'scrollUp'
        QtPrivate::TypeAndForceComplete<QString, std::true_type>,
        // property 'isScrollUpImmutable'
        QtPrivate::TypeAndForceComplete<bool, std::true_type>,
        // property 'scrollDown'
        QtPrivate::TypeAndForceComplete<QString, std::true_type>,
        // property 'isScrollDownImmutable'
        QtPrivate::TypeAndForceComplete<bool, std::true_type>,
        // Q_OBJECT / Q_GADGET
        QtPrivate::TypeAndForceComplete<MouseSettings, std::true_type>,
        // method 'LeftChanged'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'Leftx2Changed'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'MiddleChanged'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'Middlex2Changed'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'RightChanged'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'Rightx2Changed'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'ScrollUpChanged'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'ScrollDownChanged'
        QtPrivate::TypeAndForceComplete<void, std::false_type>
    >,
    nullptr
} };

void MouseSettings::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        auto *_t = static_cast<MouseSettings *>(_o);
        (void)_t;
        switch (_id) {
        case 0: _t->LeftChanged(); break;
        case 1: _t->Leftx2Changed(); break;
        case 2: _t->MiddleChanged(); break;
        case 3: _t->Middlex2Changed(); break;
        case 4: _t->RightChanged(); break;
        case 5: _t->Rightx2Changed(); break;
        case 6: _t->ScrollUpChanged(); break;
        case 7: _t->ScrollDownChanged(); break;
        default: ;
        }
    } else if (_c == QMetaObject::IndexOfMethod) {
        int *result = reinterpret_cast<int *>(_a[0]);
        {
            using _t = void (MouseSettings::*)();
            if (_t _q_method = &MouseSettings::LeftChanged; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 0;
                return;
            }
        }
        {
            using _t = void (MouseSettings::*)();
            if (_t _q_method = &MouseSettings::Leftx2Changed; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 1;
                return;
            }
        }
        {
            using _t = void (MouseSettings::*)();
            if (_t _q_method = &MouseSettings::MiddleChanged; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 2;
                return;
            }
        }
        {
            using _t = void (MouseSettings::*)();
            if (_t _q_method = &MouseSettings::Middlex2Changed; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 3;
                return;
            }
        }
        {
            using _t = void (MouseSettings::*)();
            if (_t _q_method = &MouseSettings::RightChanged; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 4;
                return;
            }
        }
        {
            using _t = void (MouseSettings::*)();
            if (_t _q_method = &MouseSettings::Rightx2Changed; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 5;
                return;
            }
        }
        {
            using _t = void (MouseSettings::*)();
            if (_t _q_method = &MouseSettings::ScrollUpChanged; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 6;
                return;
            }
        }
        {
            using _t = void (MouseSettings::*)();
            if (_t _q_method = &MouseSettings::ScrollDownChanged; *reinterpret_cast<_t *>(_a[1]) == _q_method) {
                *result = 7;
                return;
            }
        }
    } else if (_c == QMetaObject::ReadProperty) {
        auto *_t = static_cast<MouseSettings *>(_o);
        (void)_t;
        void *_v = _a[0];
        switch (_id) {
        case 0: *reinterpret_cast< QString*>(_v) = _t->left(); break;
        case 1: *reinterpret_cast< bool*>(_v) = _t->isLeftImmutable(); break;
        case 2: *reinterpret_cast< QString*>(_v) = _t->leftx2(); break;
        case 3: *reinterpret_cast< bool*>(_v) = _t->isLeftx2Immutable(); break;
        case 4: *reinterpret_cast< QString*>(_v) = _t->middle(); break;
        case 5: *reinterpret_cast< bool*>(_v) = _t->isMiddleImmutable(); break;
        case 6: *reinterpret_cast< QString*>(_v) = _t->middlex2(); break;
        case 7: *reinterpret_cast< bool*>(_v) = _t->isMiddlex2Immutable(); break;
        case 8: *reinterpret_cast< QString*>(_v) = _t->right(); break;
        case 9: *reinterpret_cast< bool*>(_v) = _t->isRightImmutable(); break;
        case 10: *reinterpret_cast< QString*>(_v) = _t->rightx2(); break;
        case 11: *reinterpret_cast< bool*>(_v) = _t->isRightx2Immutable(); break;
        case 12: *reinterpret_cast< QString*>(_v) = _t->scrollUp(); break;
        case 13: *reinterpret_cast< bool*>(_v) = _t->isScrollUpImmutable(); break;
        case 14: *reinterpret_cast< QString*>(_v) = _t->scrollDown(); break;
        case 15: *reinterpret_cast< bool*>(_v) = _t->isScrollDownImmutable(); break;
        default: break;
        }
    } else if (_c == QMetaObject::WriteProperty) {
        auto *_t = static_cast<MouseSettings *>(_o);
        (void)_t;
        void *_v = _a[0];
        switch (_id) {
        case 0: _t->setLeft(*reinterpret_cast< QString*>(_v)); break;
        case 2: _t->setLeftx2(*reinterpret_cast< QString*>(_v)); break;
        case 4: _t->setMiddle(*reinterpret_cast< QString*>(_v)); break;
        case 6: _t->setMiddlex2(*reinterpret_cast< QString*>(_v)); break;
        case 8: _t->setRight(*reinterpret_cast< QString*>(_v)); break;
        case 10: _t->setRightx2(*reinterpret_cast< QString*>(_v)); break;
        case 12: _t->setScrollUp(*reinterpret_cast< QString*>(_v)); break;
        case 14: _t->setScrollDown(*reinterpret_cast< QString*>(_v)); break;
        default: break;
        }
    } else if (_c == QMetaObject::ResetProperty) {
    } else if (_c == QMetaObject::BindableProperty) {
    }
    (void)_a;
}

const QMetaObject *MouseSettings::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *MouseSettings::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_CLASSMouseSettingsENDCLASS.stringdata0))
        return static_cast<void*>(this);
    return KConfigSkeleton::qt_metacast(_clname);
}

int MouseSettings::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = KConfigSkeleton::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 8)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 8;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 8)
            *reinterpret_cast<QMetaType *>(_a[0]) = QMetaType();
        _id -= 8;
    }else if (_c == QMetaObject::ReadProperty || _c == QMetaObject::WriteProperty
            || _c == QMetaObject::ResetProperty || _c == QMetaObject::BindableProperty
            || _c == QMetaObject::RegisterPropertyMetaType) {
        qt_static_metacall(this, _c, _id, _a);
        _id -= 16;
    }
    return _id;
}

// SIGNAL 0
void MouseSettings::LeftChanged()
{
    QMetaObject::activate(this, &staticMetaObject, 0, nullptr);
}

// SIGNAL 1
void MouseSettings::Leftx2Changed()
{
    QMetaObject::activate(this, &staticMetaObject, 1, nullptr);
}

// SIGNAL 2
void MouseSettings::MiddleChanged()
{
    QMetaObject::activate(this, &staticMetaObject, 2, nullptr);
}

// SIGNAL 3
void MouseSettings::Middlex2Changed()
{
    QMetaObject::activate(this, &staticMetaObject, 3, nullptr);
}

// SIGNAL 4
void MouseSettings::RightChanged()
{
    QMetaObject::activate(this, &staticMetaObject, 4, nullptr);
}

// SIGNAL 5
void MouseSettings::Rightx2Changed()
{
    QMetaObject::activate(this, &staticMetaObject, 5, nullptr);
}

// SIGNAL 6
void MouseSettings::ScrollUpChanged()
{
    QMetaObject::activate(this, &staticMetaObject, 6, nullptr);
}

// SIGNAL 7
void MouseSettings::ScrollDownChanged()
{
    QMetaObject::activate(this, &staticMetaObject, 7, nullptr);
}
QT_WARNING_POP
